<!--
 * Copyright 2004-2005 Sun Microsystems, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 *  implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->
<project name="propertiesdotxml" basedir=".">

<property environment="env"/>
<property file="${env.RA_HOME}/tests/common/config.properties"/>   

<target name="init-common" depends="check-glassfish.version,setToolProperty,setS1ASclassPath,setAsProps">

   <echo message="j2ee.jar ${j2ee.jar}" level="verbose"/>

   <property name="build.base.dir" value="${env.RA_HOME}/tests/build"/>
   <property name="build.classes.dir" value="${build.base.dir}/classes"/>
   <property name="assemble.dir" value="${build.base.dir}/lib"/>
   <property name="dist.dir" value="${build.base.dir}/dist"/>

<!-- tests -->
   <mkdir dir="${build.classes.dir}"/>
   <mkdir dir="${assemble.dir}"/>
   <mkdir dir="${dist.dir}"/>
   
   <property name="pe" value="Platform Edition of S1AS"/>
   <property name="APS_HOME" value="${env.RA_HOME}/tests"/>
   <property file="${env.APS_HOME}/config.properties"/>   
   <echo message="admin.domain ${admin.domain}" level="verbose"/>
   <echo message="admin.user ${admin.user}" level="verbose"/>
   <echo message="admin.port ${admin.port}" level="verbose"/>
   <echo message="http.port ${http.port}" level="verbose"/>
   <echo message="http.host ${http.host}" level="verbose"/>

   <property name="apptype" value="application"/>
    <!-- pointbase properties -->
    <property name="db.port"  value="9092"/>
    <property name="db.type"  value="pointbase"/>
    <property name="db.host"  value="localhost"/>
    <property name="db.name" value="sqe-samples"/>
    <property name="db.user" value="pbpublic"/>
    <property name="db.pwd" value="pbpublic"/>
    <property name="db.root" value="${env.S1AS_HOME}/pointbase"/>
    <property name="db.class" value="com.pointbase.jdbc.jdbcDataSource" />
    <property name="db.xaclass" value="com.pointbase.xa.xaDataSource"/>
    <property name="db.driver" value="com.pointbase.jdbc.jdbcUniversalDriver"/>
    <property name="db.dir" value="${env.APS_HOME}/build"/>
    <property name="db.url" value="jdbc:pointbase:server://${db.host}:${db.port}/${db.name},new"/>
    <property name="db.classpath" value="${db.root}/lib/pbtools.jar:${db.root}/lib/pbclient.jar:${db.root}/lib/pbembedded.jar:${env.APS_HOME}/lib"/>


    <!-- resource properties -->
    <property name="dest.type" value="queue"/>
    <property name="dest.name" value="Queue"/>
    <property name="jms.factory.name" value="jms/QCFactory"/>
    <property name="jms.factory.type" value="javax.jms.QueueConnectionFactory"/>
    <property name="jms.resource.name" value="jms/SampleQueue"/>
    <property name="jms.resource.type" value="javax.jms.Queue"/>

    <property name="jdbc.conpool.name" value="jdbc-pointbase-pool"/>
    <property name="jdbc.resource.name" value="jdbc/s1qeDB"/>
    <property name="jdbc.resource.type" value="javax.sql.DataSource"/>

    <!-- appclient properties -->
    <property name="appclient.application.args" value="" />

    <!-- Test Harnes properties -->
    <property name="compile.classpath"
      value="${build.classes.dir}:${s1as.classpath}:${db.classpath}"/>
    <!-- property name="ejbjar.classes" 
      value="**/*Local*.class,**/*Remote*.class,**/*Home*.class,**/*Bean*.class" / -->
    <!-- property name="appclientjar.classes" 
      value="**/*Local*.class,**/*Remote*.class,**/*Client*.class" / -->
     <property name="webclient.war.files"
   value="${build.classes.dir}"/>
    <property name="webclient.war.classes"
      value="**/*Servlet*.class"/>

    <property name="test.name" value=""/>
    <property name="test.description" value=""/>
		
</target>

<!-- Set some asadmin command-line args -->
<target name="setAsProps">
	<propertycopy property="admin.user" from="${glassfish.version}.admin.user"/>
	<if>
	 <equals arg1="${admin.user}" arg2="" />
	 <then>
	    <property name="as.userpass" value=""/>
	    <property name="as.user" value=""/>
	    <property name="as.pass" value=""/>
	 </then>
	 <else>
	    <property name="as.userpass" value="--user ${admin.user} --passwordfile ${admin.passwordfile}"/>
	    <property name="as.user" value="--user ${asadmin.user}"/>
	    <property name="as.pass" value="--passwordfile ${admin.passwordfile}"/>
	 </else>
	</if>
	
	<property name="as.host" value="--host=${admin.host}"/>
	<property name="as.port" value="--port=${admin.port}"/>
    <property name="as.props" value="--host ${admin.host} --port ${admin.port}"/>
</target>

<target name="setS1ASclassPath" unless="s1as.classpath">
  <path id="s1as_classpath_jars">
    <fileset dir="${env.S1AS_HOME}/lib" includes="*.jar"/>
  </path>
  <pathconvert pathsep=":" 
    property="s1as.classpath" 
    refid="s1as_classpath_jars"/>
</target>

<target name="setToolProperty" 
  depends="setOSConditions,setToolWin,setToolUnix">
</target>

    <!--
    This was needed to make sure that we can 
    differentiate between .exe/.bat for windows and .sh for solaris. 
    -->
<target name="setOSConditions">  
  <condition property="isUnix">
    <os family="unix"/>
  </condition>

  <condition property="isWindows">
    <os family="windows" />
  </condition>
</target>

<target name="setToolWin" if="isWindows">  
  <property name="APPCLIENT" value="${env.S1AS_HOME}/bin/appclient.bat"/>
  <property name="ASADMIN" value="${env.S1AS_HOME}/bin/asadmin.bat"/>
  <property name="ASANT" value="${env.S1AS_HOME}/bin/asant.bat"/>
  <property name="JSPC" value="${env.S1AS_HOME}/bin/jspc.bat"/>
  <property name="PACKAGE-APPCLIENT" 
      value="${env.S1AS_HOME}/bin/package-appclient.bat"/>
  <property name="VERIFIER" value="${env.S1AS_HOME}/bin/verifier.bat"/>
  <property name="RMIC" value="${env.S1AS_HOME}/jdk/bin/rmic.exe"/>

  <property name="pb.start.server" 
      value="${env.S1AS_HOME}/pointbase/server/StartServer.bat"/>
  <property name="pb.start.server1" 
      value="${env.S1AS_HOME}/pointbase/server/StartServer1.bat"/>
 <property name="ld.library.path" location="${env.S1AS_HOME}/lib;${env.S1AS_HOME}/bin"/>
</target>

<target name="setToolUnix" if="isUnix">  
  <property name="APPCLIENT" value="${env.S1AS_HOME}/bin/appclient"/>
  <property name="ASADMIN" value="${env.S1AS_HOME}/bin/asadmin"/>
  <property name="ASANT" value="${env.S1AS_HOME}/bin/asant"/>
  <property name="JSPC" value="${env.S1AS_HOME}/bin/jspc"/>
  <property name="PACKAGE-APPCLIENT" 
      value="${env.S1AS_HOME}/bin/package-appclient"/>
  <property name="VERIFIER" value="${env.S1AS_HOME}/bin/verifier"/>
  <property name="RMIC" value="${env.S1AS_HOME}/jdk/bin/rmic"/>
  <property name="pb.start.server" 
      value="${env.S1AS_HOME}/pointbase/server/StartServer"/>
  <property name="pb.start.server1" 
      value="${env.S1AS_HOME}/pointbase/server/StartServer1"/>
 <property name="ld.library.path" location="${env.S1AS_HOME}/lib:${env.S1AS_HOME}/bin"/>
</target>

<!--
the fixFiles target removes all ^M charectars from the end of 
lines of MANIFEST.MF files since they are very sensitive to it.
-->
<target name="fixFiles" depends="setOSConditions" >
  <antcall target="convUnix" />
  <antcall target="convWin" />
</target>
<target name="convUnix" if="isUnix">
  <fixcrlf srcdir="."
    eol="lf" eof="remove"
    includes="**/*.MF" />
  <echo message="fixed files for Unix" level="verbose"/>
</target>

<target name="convWin" if="isWindows">
  <fixcrlf srcdir="."
    eol="crlf" eof="asis"
    includes="**/*.MF" />
  <echo message="fixed files for Windows" level="verbose"/>
</target>

</project>
